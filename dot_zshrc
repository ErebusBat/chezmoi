# # vim: set ft=zsh:ts=2:sw=2:sts=2:et:ai:si:sta
# https://htr3n.github.io/2018/07/faster-zsh/
# zmodload zsh/zprof

if [[ $TERM == "xterm-ghostty" ]] && [[ $(uname) == "Linux" ]]; then
  echo "Overriding TERM from $TERM..."
  export TERM=xterm-256color
fi

if [[ ! ":$PATH:" == *":$HOME/bin:"* ]]; then
  export PATH=$HOME/bin:$PATH
fi

################################################################################
# Antidote.sh
################################################################################
autoload -U +X compinit

# zsh_plugins=$HOME/.config/zsh-antibody
zsh_plugins=$HOME/.config/zsh-antibody/plugins

# Ensure the .zsh_plugins.txt file exists so you can add plugins.
[[ -f ${zsh_plugins}.txt ]] || touch ${zsh_plugins}.txt

# Lazy-load antidote from its functions directory.
fpath=($HOME/.config/antidote/functions $fpath)
autoload -Uz antidote

# Generate a new static file whenever .zsh_plugins.txt is updated.
# We can't do file-time comparisons here because the file date is
# is managed by Chezmoi
# if [[ ${zsh_plugins}.txt -nt ${zsh_plugins}.zsh ]]; then
if [[ ! -f ${zsh_plugins}.zsh ]]; then
  echo "Antidote Bundling"
  source $HOME/.config/antidote/antidote.zsh
  antidote bundle <${zsh_plugins}.txt >|${zsh_plugins}.zsh
fi

# Source your static plugins file.
source ${zsh_plugins}.zsh


################################################################################
# Completion
#   NOTE: ZSH will create .zcompdump on start up so in the even of a brand
#         new file the DB will be out of date.   This shouldn't be an issue
#         day-to-day... but if that happens then `compinit` will fix it
################################################################################
# See:
#   https://gist.github.com/ctechols/ca1035271ad134841284
#   https://carlosbecker.com/posts/speeding-up-zsh
# On slow systems, checking the cached .zcompdump file to see if it must be
# regenerated adds a noticable delay to zsh startup.  This little hack restricts
# it to once a day.  It should be pasted into your own completion file.
#
compinit -d ~/.zcompdump
if [[ $(date -r ~/.zcompdump +'%Y%j') != $(date +'%Y%j') ]]; then
  # echo "Dumping compinit"
  compdump
  zcompile ~/.zcompdump
else
  # echo "Loading Compinit"
  compinit
fi

# zprof
