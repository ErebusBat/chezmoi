# key
set-window-option -g allow-rename off

set-option -g xterm-keys on

### linux
set-option -g default-command "/bin/zsh"
# set -g utf8 on
# set -g status-utf8 on
### END - linux

### 256color
# See .tmux/scripts folder for more info on tmux-256color
# DO NOT change these lines without reading that!
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256c*:Tc"      # match generic TERMs with 256c in their name
set -ga terminal-overrides ",*256c*:RGB"     # match generic TERMs with 256c in their name
set -ga terminal-overrides ",alacritty:Tc"   # also setup alacritty (assuming it is setup correctly to use its name as TERM)
set -ga terminal-overrides ",alacritty:RGB"  # also setup alacritty (assuming it is setup correctly to use its name as TERM)
### END - 256color

set -g focus-events on

source-file ~/.tmux/tmux-status.conf

# NeoVIM Tweak
# set -sg escape-time 10

# Unbind
unbind C-d # Delete pane

# prefix key
unbind C-b
set -g prefix C-a
bind C-a send-prefix

bind Space select-layout even-vertical

# Quick Searches
bind w run-shell -b "tmux list-windows -F \"##I:##W\" | fzf-tmux | cut -d \":\" -f 1 | xargs tmux select-window -t"
bind s run-shell -b "tmux list-sessions -F \"##S\" | fzf-tmux | cut -d \":\" -f 1 | xargs tmux switch-client -t"

# bind-key C-l send-keys -R \; clear-history
bind C-r refresh-client \; send C-l \; display 'Clear / Redraw'

# Swap Sessions
unbind \; # Default previous pane.  In reality we don't usually jump over panes to make this useful
bind \; switch-client -l
# Swap Windows
unbind \'
bind \' last-window

# Syncronize Panes
bind ` set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"


# Disable raw Ctrl-Z, but enable it with a prefix
bind C-z send C-z
bind -n C-z display 'DOH!'

# Ctrl-R: Reload tmux config
bind r source-file ~/.tmux.conf \; display 'Config reloaded'

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Name tab the name of tmux session (doesn't work in iTerm2 integrated mode)
set-option -g set-titles on
set-option -g set-titles-string '#S'

# Renames
bind-key , command-prompt "rename-window -- '%%'"
# bind-key N      command-prompt 'rename-session %%'

# Selection / Copy / Paste
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle


bind-key . swap-pane -t 0

# Open new windows in current PWD
bind-key c new-window -c '#{pane_current_path}'

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="~/bin/.tmux-isvim '#{pane_tty}'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
### Vim pane bindings end

bind-key -r C-o rotate-window
bind-key -r M-o rotate-window -D
# bind-key -r   { swap-pane -U
# bind-key -r   } swap-pane -D

# Resize pane shortcuts
set-option -g repeat-time 1000
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Clear screen / buffer
# Bindto Both Prefx+C-L and Prefix-L
# If in Vim then just send C-l to redraw screen
unbind 'C-l'
bind-key 'C-l' if-shell "$is_vim" 'send-keys C-l' 'clear-history; send-keys C-l;'
unbind 'l'
bind-key 'l' if-shell "$is_vim" 'send-keys C-l' 'clear-history; send-keys C-l;'

# Swap pane with our well known wiki pane
unbind 'C-w'
bind-key 'C-w' 'swap-pane -s system:0.0'

#
# Quick Nav
#
unbind 'C-q'
bind-key 'C-q' 'switch-client -t system:0.0'        # Wiki

bind-key 'F1' 'switch-client -t guest-server:1.0'    # GuestServer VIM
bind-key 'F2' 'switch-client -t guest-server:0.3'    # GuestServer console (dev)
bind-key 'F3' 'switch-client -t guest-server:0.1'    # GuestServer Server
bind-key 'F4' 'switch-client -t guest-server:0.1; resize-pane -Z'    # GuestServer rails s

bind-key 'F5' 'switch-client -t guest-server:5.1; resize-pane -Z'    # GuestServer - scim_rails
bind-key 'F6' 'switch-client -t guest-server:6.1; resize-pane -Z'    # GuestServer - scim_rails_upstream

# bind-key 'F7' 'switch-client -t guest-server:3.0'    #
# bind-key 'F8' 'switch-client -t guest-server:3.0'    #
# bind-key 'F9' 'switch-client -t guest-server:3.0'    #
# bind-key 'F10' 'switch-client -t guest-server:3.0'   #
# bind-key 'F11' 'switch-client -t system:1.0'        # Docker Dev
bind-key 'F12' 'switch-client -t system:0.0'        # Wiki

# Buffers to/from Mac clipboard, yay tmux book from pragprog
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"


# After reloading config prefix+I will install plugins, if needed
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'mattdavis90/base16-tmux'

set -g @colors-base16 'darktooth'
# set -g @colors-base16 'solarized-light'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
