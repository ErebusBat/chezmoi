#!/bin/zsh

# Setup paths, support known locations for vault root
LOGS_PATH="tguest/logs/$(date +%Y/%m-%b)"
FILE_NAME="$(date +%F-%a).md"
WIKI_ROOT_PATHS=(
  ~/Documents/Obsidian/vimwiki   # Mac
  ~/Sync/Obsidian/vimwiki        # Thelio (SyncThing)
  ~/vimwiki                      # Thelio (Obsidian)
)

# Find root path, error if not found
for p in $WIKI_ROOT_PATHS; do
  if [[ -d $p ]]; then
    WIKI_ROOT_PATH=$p
    break
  fi
done
if [[ ! -d $WIKI_ROOT_PATH ]]; then
  echo "*** FATAL: Could not find wiki root path!"
  exit 1
fi

# Build final paths
FULL_DIR_PATH="$WIKI_ROOT_PATH/$LOGS_PATH"
FULL_FILE_PATH="$FULL_DIR_PATH/$FILE_NAME"

# echo "[$(date)] --------------------------------------------------------------------------------" >> /tmp/dlog.log

ENTRY=""
while [[ -n $1 ]]; do
  ENTRY="${ENTRY} ${1}"
  shift
done
# Strip leading and trailing spaces
ENTRY=${(MS)ENTRY##[[:graph:]]*[[:graph:]]}

# echo "[$(date)] ENTRY>>>$ENTRY<<<" >> /tmp/dlog.log

# Does the entry have the special pasteboard indicator?
PASTEBOARD=$(echo $ENTRY | grep '%%')
PB_SEACH_EC=$?
if [[ $PB_SEACH_EC -eq 0 ]]; then
  # echo "[$(date)] pbpaste>>>$(pbpaste)<<<" >> /tmp/dlog.log
  PASTEBOARD=$(~/bin/tg-markdown -)
  # echo "[$(date)] PASTEBOARD>>>$PASTEBOARD<<<" >> /tmp/dlog.log
  PASTEBOARD=${(MS)PASTEBOARD##[[:graph:]]*[[:graph:]]}
  # echo "[$(date)] PASTEBOARD>>>$PASTEBOARD<<<" >> /tmp/dlog.log
  # Replace %% with the contents of tg-markdown-ified pasteboard
  ENTRY="${ENTRY//\%\%/$PASTEBOARD}"
fi
# echo "[$(date)] ENTRY>>>$ENTRY<<<" >> /tmp/dlog.log

if [[ -z $ENTRY ]]; then
  echo "*** FATAL: No log message provided; aborting." >&2
  exit 1
fi
if [[ ! -f $FULL_FILE_PATH ]]; then
  echo "*** FATAL: Could not find log file, create in Obsidian first.  Looking for $FULL_FILE_PATH" >&2
  exit 2
fi

################################################################################
# Some Global Replacements
################################################################################
#- Emojis
ENTRY=${ENTRY:gs/:100:/💯}
ENTRY=${ENTRY:gs/:bee:/🐝}
ENTRY=${ENTRY:gs/:book:/📖}
ENTRY=${ENTRY:gs/:broom:/🧹}
ENTRY=${ENTRY:gs/:bun:/🐇}
ENTRY=${ENTRY:gs/:cheese:/🧀}
ENTRY=${ENTRY:gs/:cherries:/🍒}
ENTRY=${ENTRY:gs/:cherry:/🍒}
ENTRY=${ENTRY:gs/:coffee:/☕️}
ENTRY=${ENTRY:gs/:cofin:/⚰️}
ENTRY=${ENTRY:gs/:duck:/🦆}
ENTRY=${ENTRY:gs/:evil:/😈}
ENTRY=${ENTRY:gs/:hot:/🥵}
ENTRY=${ENTRY:gs/:kiss:/😘}
ENTRY=${ENTRY:gs/:music:/🎵}
ENTRY=${ENTRY:gs/:pen:/✒️}
ENTRY=${ENTRY:gs/:pill:/💊}
ENTRY=${ENTRY:gs/:pin:/📌}
ENTRY=${ENTRY:gs/:pizza:/🍕}
ENTRY=${ENTRY:gs/:ppcot:/🙏🍒}
ENTRY=${ENTRY:gs/:pray:/🙏}
ENTRY=${ENTRY:gs/:puzzle:/🧩}
ENTRY=${ENTRY:gs/:rofl:/🤣}
ENTRY=${ENTRY:gs/:run:/🏃}
ENTRY=${ENTRY:gs/:school:/🎓}
ENTRY=${ENTRY:gs/:shh:/🤫}
ENTRY=${ENTRY:gs/:shower:/🚿}
ENTRY=${ENTRY:gs/:taco:/🌮}
#- Personal
ENTRY=${ENTRY:gs/NUC/[[IntelNUC|nuc01]]}
ENTRY=${ENTRY:gs/MAZE/[[IntelNUC 2 - Maze|Maze]]}
ENTRY=${ENTRY:gs/THELIO/[[System76 Thelio Deskop|Thelio]]}
#- SIE - Entities
ENTRY=${ENTRY:gs/LEIDOS/[[Leidos]]}
ENTRY=${ENTRY:gs/MOOG/[[Moog]]}
ENTRY=${ENTRY:gs/TESLA/[[Tesla]]}
ENTRY=${ENTRY:gs/THERMO/[[ThermoFisher]]}
ENTRY=${ENTRY:gs/SLACK/[[SalesForce|SF\/Slack]]}
#- SIE - People
ENTRY=${ENTRY:gs/ALINA/[[Alina Roshchupkina|Alina]}
ENTRY=${ENTRY:gs/BRUNO/[[Bruno Fontanella|Bruno]]}
ENTRY=${ENTRY:gs/CAM/[[Cameron Wiebe|Cam]]}
ENTRY=${ENTRY:gs/DIEGO/[[Diego De Oliveira Toral|Diego]]}
ENTRY=${ENTRY:gs/FABMAN/[[Fabricio Ribeiro|Fabricio]]}
ENTRY=${ENTRY:gs/GREG/[[Greg Underwood|Greg]]}
ENTRY=${ENTRY:gs/JOLIE/[[Jolie Summers|Jolie]]}
ENTRY=${ENTRY:gs/JON/[[Jon Sangster|Jon]]}
ENTRY=${ENTRY:gs/KIRAN/[[Kirandeep Virdi|Kiran]]}
ENTRY=${ENTRY:gs/MATHEUS/[[Matheus Bastos|Matheus]]}
ENTRY=${ENTRY:gs/PETE/[[Pete Akeley|Pete]]}
ENTRY=${ENTRY:gs/RON/[[Ron Hook|Ron]]}
ENTRY=${ENTRY:gs/RYAN/[[Ryan Canby|Ryan]]}
ENTRY=${ENTRY:gs/SHAMA/[[Kshama Manjrekar|Shama]]}
ENTRY=${ENTRY:gs/SRIKANT/[[Srikant Talluri|Srikant]]}
ENTRY=${ENTRY:gs/TYLER/[[Tyler Kim|Tyler]]}
ENTRY=${ENTRY:gs/VLAD/[[Vlad Dzhabarov|Vlad]]}
ENTRY=${ENTRY:gs/WILL/[[Will Freeman|Will]]}
#- SIE - Projects / Pages
ENTRY=${ENTRY:gs/COMPAPP/[[Companion App Integration]]}
ENTRY=${ENTRY:gs/HOSTCACHE/[[Hosts Cache Issue]]}
ENTRY=${ENTRY:gs/STATSD/[[statsd]]}

# Spotify
if [[ $ENTRY == *SONG* ]]; then
  SONG=$(gospt now | sed -E 's/^[⏸▶ ]+//g' )
  if [[ -z $SONG ]]; then
    SONG="🎵 *ERR*: could not get song from spotify"
  else
    SONG="🎵 ${SONG}"
  fi
  ENTRY=${ENTRY:gs/SONG/$SONG}
fi

TIMESTAMP=$(date +%H:%M)
MD_TEXT="\n- ${TIMESTAMP} - ${ENTRY}"
# echo "[$(date)] MD_TEXT>>>$MD_TEXT<<<" >> /tmp/dlog.log

# echo "Would have added '${MD_TEXT}' to ${FULL_FILE_PATH}"
echo $MD_TEXT >> $FULL_FILE_PATH

# Remove trailing LF from file
echo -n "$(cat $FULL_FILE_PATH)" > $FULL_FILE_PATH
